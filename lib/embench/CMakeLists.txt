PROJECT(embench)

SET(EMBENCH_DIR
    ""
    CACHE PATH "embench source directory"
)

IF(NOT EMBENCH_DIR)
    MESSAGE(FATAL_ERROR "Undefined: EMBENCH_DIR")
ENDIF()

SET(EMBENCH_BENCHMARK
    ""
    CACHE STRING "Specify which benchmark to run."
)
# SET_PROPERTY(CACHE TACLEBENCH_BENCHMARK PROPERTY STRINGS TODO)

IF(NOT EMBENCH_BENCHMARK)
    MESSAGE(FATAL_ERROR "Undefined: EMBENCH_BENCHMARK")
ENDIF()

SET(BENCH_DIR ${EMBENCH_DIR}/src/${EMBENCH_BENCHMARK})
FILE(GLOB BENCH_SRCS ${BENCH_DIR}/*.c)

COMMON_ADD_LIBRARY(${PROJECT_NAME} STATIC embench.c ${EMBENCH_DIR}/support/beebsc.c ${BENCH_SRCS})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC . ${BENCH_DIR} ${EMBENCH_DIR}/support)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC m support)
# TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_BINARY_DIR}")
TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PUBLIC WARMUP_HEAT=0 CPU_MHZ=1)
# CONFIGURE_FILE(taclebench_wrapper.h.in taclebench_wrapper.h @ONLY)
IF(${GLOBAL_ISEL})
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:C>:-mllvm -global-isel=1>")
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:CXX>:-mllvm -global-isel=1>")
ENDIF()
