PROJECT(taclebench)

SET(TACLEBENCH_DIR
    ""
    CACHE PATH "tacle-bench source directory"
)

IF(NOT TACLEBENCH_DIR)
    MESSAGE(FATAL_ERROR "Undefined: TACLEBENCH_DIR")
ENDIF()

SET(TACLEBENCH_BENCHMARK
    ""
    CACHE STRING "Specify which benchmark to run."
)
# SET_PROPERTY(CACHE TACLEBENCH_BENCHMARK PROPERTY STRINGS TODO)

IF(NOT TACLEBENCH_BENCHMARK)
    MESSAGE(FATAL_ERROR "Undefined: TACLEBENCH_BENCHMARK")
ENDIF()

SET(BENCH_DIR ${TACLEBENCH_DIR}/bench/${TACLEBENCH_BENCHMARK})
get_filename_component(BENCH_NAME ${TACLEBENCH_BENCHMARK} NAME)
SET(BENCH_FILE ${BENCH_DIR}/${BENCH_NAME}.c)
FILE(GLOB BENCH_SRCS ${BENCH_DIR}/*.c)
LIST(REMOVE_ITEM BENCH_SRCS ${BENCH_FILE})

COMMON_ADD_LIBRARY(${PROJECT_NAME} STATIC taclebench.c ${BENCH_SRCS})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC . ${BENCH_DIR})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_BINARY_DIR}")
# TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PUBLIC NUM_RUNS=${NUM_RUNS})
CONFIGURE_FILE(taclebench_wrapper.h.in ${CMAKE_CURRENT_BINARY_DIR}/taclebench_wrapper.h @ONLY)
TARGET_LINK_LIBRARIES(taclebench PRIVATE support m)

IF(${GLOBAL_ISEL})
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:C>:-mllvm -global-isel=1>")
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:CXX>:-mllvm -global-isel=1>")
SET(GLOBAL_ISEL_ABORT 2)
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:C>:-mllvm -global-isel-abort=${GLOBAL_ISEL_ABORT}>")
target_compile_options(${PROJECT_NAME} PRIVATE "SHELL:$<$<COMPILE_LANGUAGE:CXX>:-mllvm -global-isel-abort=${GLOBAL_ISEL_ABORT}>")
ENDIF()
