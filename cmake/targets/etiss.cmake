SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_PROCESSOR etiss)

IF(NOT MEM_ROM_ORIGIN)
    SET(MEM_ROM_ORIGIN 0x0)
ENDIF()
IF(NOT MEM_ROM_LENGTH)
    SET(MEM_ROM_LENGTH 0x10000000)
ENDIF()
IF(NOT MEM_RAM_ORIGIN)
    SET(MEM_RAM_ORIGIN 0x10000000)
ENDIF()
IF(NOT MEM_RAM_LENGTH)
    SET(MEM_RAM_LENGTH 0x100000)
ENDIF()

set(MIN_STACK_SIZE 0x4000)
set(MIN_HEAP_SIZE 0x4000)

SET(ETISS_LDSCRIPT ${CMAKE_CURRENT_BINARY_DIR}/etiss.ld)
IF(${TOOLCHAIN} STREQUAL "llvm")
    SET(ETISS_LDFLAGS "-L${CMAKE_CURRENT_BINARY_DIR}/riscv_crt0 -T ${ETISS_LDSCRIPT} -nostdlib")
ELSE()
    SET(ETISS_LDFLAGS "-L${CMAKE_CURRENT_BINARY_DIR}/riscv_crt0 --specs=${CMAKE_CURRENT_LIST_DIR}/etiss/etiss-semihost.specs -T ${ETISS_LDSCRIPT}")
ENDIF()

SET(ETISS_CRT_DIR ${CMAKE_CURRENT_LIST_DIR}/etiss)

MACRO(COMMON_ADD_EXECUTABLE TARGET_NAME)
	  SET(SRC_FILES "${ARGN}")
    ADD_SUBDIRECTORY(${ETISS_CRT_DIR} ${CMAKE_CURRENT_BINARY_DIR}/etiss_crt0)

	  ADD_EXECUTABLE(${TARGET_NAME} ${SRC_FILES})
	  ADD_DEPENDENCIES(${TARGET_NAME} etiss_crt0)
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${ETISS_LDFLAGS}")
    TARGET_LINK_LIBRARIES(${TARGET_NAME} PRIVATE etiss_crt0)
ENDMACRO()
MACRO(COMMON_ADD_LIBRARY TARGET_NAME)
    ADD_LIBRARY(${TARGET_NAME} ${ARGN})
    IF("${ARGV1}" STREQUAL "OBJECT" AND "${ARGV2}" STREQUAL "IMPORTED")
        IF(${TOOLCHAIN} STREQUAL "llvm")
            TARGET_LINK_LIBRARIES(${TARGET_NAME} INTERFACE c semihost gcc)
        ENDIF()
        TARGET_LINK_LIBRARIES(${TARGET_NAME} INTERFACE etiss_crt0)
    ELSE()
        IF(${TOOLCHAIN} STREQUAL "llvm")
            TARGET_LINK_LIBRARIES(${TARGET_NAME} PRIVATE c semihost gcc)
        ENDIF()
        TARGET_LINK_LIBRARIES(${TARGET_NAME} PRIVATE etiss_crt0)
    ENDIF()
ENDMACRO()

CONFIGURE_FILE(${CMAKE_CURRENT_LIST_DIR}/etiss/etiss.ld.in etiss.ld @ONLY)

# The linker argument setting will break the cmake test program on 64-bit,
# so disable test program linking for now.
SET(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
